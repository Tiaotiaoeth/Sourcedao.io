(async () => {
    try {
        console.log('Running batch V2 add repo script...');
    
        //// 初始化题库合约
        let contractName = 'QuestionRepo'
        let constructorArgs = []
        let artifactsPath = `browser/contracts/artifacts/${contractName}.json`    
        let metadata = JSON.parse(await remix.call('fileManager', 'getFile', artifactsPath))
        let signer = (new ethers.providers.Web3Provider(web3Provider)).getSigner()
        let factory = new ethers.ContractFactory(metadata.abi, metadata.data.bytecode.object, signer);    
        
        let repo = await factory.attach('0x61f842730f20249537e95A15ac22727004cef2e9');
        await repo.deployed()
        console.log('question repo deployed at:'+ repo.address);

        /*
        function batchAddQuestions(
            address _author,
            uint8 _type,
            uint8 _level,
            string[] memory _ipfshash,
            uint8[] memory _standardAnswer
        )*/

        const author = '0x11C81dE81529f0998c8eC4455b75685DFC871BeD';
       
        const lv2Quests = [
            'QmNWRw8Hipj8d94H547xVShrtv8mo2R87wPqb3KTJay4Q2', 
            'Qmcn4S8HgbARzCnBGKMtLPUbpdiQJE8Xw99uvp4wJzrbcY', 
            'QmcQ2hyGf3zTmAanm9Xmbe2zPuMbpBX1LkomHYgMBi68tL', 
            'Qmd6dS7bwdMQ15HAzEBCNkkKVdF3HFcbEZi4YcLmTSBC8z', 
            'QmSoxc3vFYmkrjqXXmmWTThJm1TvsSLSnx4oYjB9gJA9Le', 
            'QmVJ2ieG4vNnFUkhwzCmMdZXGFatgWrYx8cYQrsZ9ci2tm', 
            'QmZegPECwow3cDsZdSrNhmvfVKbA2DaHWZKP2mg6eFWrKV', 
            'QmWNvFxWk8pcWzb1MetY7A71G14a2vEqoQXi21mdSKmvyh', 
            'QmWaMQTKxSSeYM82ZxmzrdpaJ9K8ar5Vd84K2HcZuWEcZT', 
            'QmdM5rDCXAzKmX21jkcnUx38t9kC8aipuwU389iyUgfYBo', 
            'QmdVC2p2Qz1zh7jE5SMuaNFmhiNvjWEF69FDCnBpZQwLMQ', 
            'QmdQBZy75SV3cdJgtQGvy9FoYB11EnM7oyxMpRSab2vbPc', 
            'QmNuA8nJwHWgEA8zZZt9vUNRs1cQTgaD8MWPRwoMSfpdd1', 
            'QmVJJYKYvtSerULP8SuSZeiUYjQUBbYTBa9vZMbWCuY7Ug', 
            'QmZQK6XW2chXsd9LD5f569YrUW5DQBvwEQaHn2jPZJwb8y', 
            'QmTjYjMttrLZPmYGjmUmkE9KmMbAEvEqhK2Gyd7pSnM4aE', 
            'QmQPK1o9j39vpRCa7CUGdGqbfqpEiF9DwCj3TrSjmnpopQ']
        const lv2Answers = [2, 1, 4, 1, 3, 3, 1, 1, 1, 2, 1, 4, 2, 1, 3, 3, 1];
        await repo.batchAddQuestions(author, 1, 2, lv2Quests, lv2Answers);

        const lv1Quests1 = [
            'QmPLQro4Weari7CpZXC9QRG1QMS4AyhdPkJmEXui4LcmEh', 
            'QmPsGRnCJxPryBkbdajisDNtT2EAUsYwHDecQiEmjCU15a', 
            'QmS1MFtRAzMroz6f29H23C1p7LT4Bn7yyKNxNqCuE9K2bd', 
            'QmYm8Cu8QzJvzmEwvhHHsKPSHYFDybKeuAvXuenHHMPapY', 
            'QmenyuLtuD3zqPu6v7Nsm6reeLMmNRmbkTYZ1QB2JtiFua', 
            'QmYr1nr36gm1WoV1Ggut4KhtRFZAT8AL9GRGvbh2NXtYGC', 
            'QmfHcPiNjRZrqbgkGax83zTGPkzP1A31J4EYvxC7Khu2oR', 
            'QmaVKt2reuEJV8djb3iayCUpBxAwwAGYxE4PZv1r4gWrWQ', 
            'QmTzMaTTgf1223m15gABFV81qxdQUxHdxPzJZhMnzC1C7P', 
            'QmRHYo3vf3avbg3dx2fNUV3BUS4WJe8rbVPYT5gSHh2kJn', 
            'QmSzEdEKb41Q69ef6x7m6LWy6cZ1bqSoUa2yqtyC4XrzLE', 
            'QmcrUXrALpYthSVMP1n2jLPZyctMoHKxBQX3yKqu7k4VUy', 
            'QmeCUePzaDYUuLvmaZDPQXpPiWFJFRCGSN9UnLSQ3BuJpx', 
            'QmWnppj512qkvgQn8SYpLCWss7qszAQQJsFPEPFnJJpZL1', 
            'QmdfdTQj3KkxUAUGHseamKaEY4e5R6CDfJzZe9gH1H7pLx', 
            'QmbH5eSjfp3oGN74QK1GmVAN7ABKjuvui8R2L76hnx1asB', 
            'QmRzNeUCqYg9UZHKng3fzrFnvk1y28fmBrynMZwvNUeP5R', 
            'QmZ7z59R7kTsvPg3idZHg6xXhHwiPr3hMQQzQ6g32MSF6R', 
            'QmaAsVyPGtDJA1qsU73cgZfggKoUJW3dCdwoV9NT9mM2MJ', 
            'QmeBEpUzMjv3qoeC3zSF9Mw9xYoKuXsHSMNTEWJF9We9Xb', 
            'QmQJVjzVCPwBKtgwEBrTTD2x3PqcqckvT6QGQnPPgC64Fe', 
            'QmavNDChDugeMGibefH45k5zo1WB4ahLrRuEwJNpkHdyZT', 
            'QmdCNXKoX8oToZMVUkSUBLWJvvLF1EnbSnuCBzLHAM5uvh', 
            'QmVjEnaf1U5pp5BDwJ8GeN1aYd1fLiD3FahM7dneyNYo36', 
            'Qmc3j94xtE1poriMKFu18V4GtjjLNcysPGovqrMREVEbSe', 
            'QmWbhwt9TYbLgMS5UvMpYw4yEiYztk1ZDYkDXmtxa64pje', 
            'QmPJ6CLMff8WzXQiwVTCEWXpA3o8T2JRBMDUz2PjXUL7xH', 
            'Qmb9u5QZpgRfCHHRwEUEvQSYhUX8JGsFBMbfRJRYQTx3gX', 
            'QmWZ9vFgqMyVCLbe4dg7vue5G44PYBe8vxBv63NEagZ2CJ', 
            'QmemKz5Zeq26Um9sJQSZDMDQHZmxUX2is6CsFCutESfhLY', 
            'QmZwJvepYEK4pUjRGyu4wzux5rTmgi9SwtT6989JZai2jr', 
            'QmfAyXL5qkd1BSF989NfFqhCdCaxrVxTJZpL3PKvVPrjtX', 
            'QmRMCkF3v6i9SL7sP4uAbAf7peFPKCXm14jsrunmvFD7nV', 
            'QmUxAjU12gzzBYoTZLyDRuvPBSmqYGqo62sDpbc6p8oisx', 
            'QmX1VZ4ayK9fbvUCmTbajC9iDJ3WAQ3g98V6hn3fCcnkyG', 
            'Qmd7FiAwnxKkuLgNiDRHew3iYCuELR6y8S5ZW8Txz1EVrA', 
            'QmZPbKQScnRfpADXTGSLSLmXfDeBJtXb6chgR5T2ppaC4k', 
            'QmaBoHyKjvWZQCJzBZhjgq7sXL8X7VJWRAbc3EHhi98rWD', 
            'QmZcyMko8Jb5rL5se23sF81MGocZtyFvNc6Mdse7gcKVZP', 
            'QmPhHqUjVauckW4nRA7cJiEi53kF9nejKyNqr5w8xz2kYD', 
            'QmUSj3Yq2MnGrJ38qnhMy6d2KEuJ3JQE8j6gCVxSkN1yba', 
            'QmNQBK7jhtevkHF7WY7cAitd3biACybqsaiY5USbt89ims', 
            'QmSLAzuQGzsDB8q1X73r14pg7o82RCothPsUCUrdbWsVWG', 
            'QmXZUETRxMu9N6aEArxa8JJSQdFwB8fHEK2jdUAR9V6aPg', 
            'QmXKmsLr4vtdTacT3Dtdo2g6MFYQBaCHeNc49gLTAt4Jcs', 
            'QmTxAVrzFzfQS66aJT1emDkj4gQkQf88pcQjz1KnVbUGnB', 
            'QmQN5m8QzMy8wdygWQzB6ewfxYrJMwmtqb3gtxpw1bE3A2', 
            'QmY6rhrQBjNRFH1tMUgARZmmcKosy1jNquFo3Ri3WdpJHq', 
            'QmdMcFDJw8Jmw63nZKzpyqwehiGhGcvMjJHHgLG3wYFcmF', 
            'QmUqDuXqm9uZByQuuy5QJjC1WCB7gLpiw9J7BQ5annah3G'];
        const lv1Quests2 = [    
            'QmYuWWMny1xyPyVRkzkKQeQBexAm3BCPBoxzmRtocQvj14', 
            'QmSmNvetZYFqu94c98DUEbNMngpWagPSXRNJB2k9fxvXmy', 
            'QmfR1PpqcRdMJxojGCC8tEYXTomV3KnAnbqfUCfSimpk6a', 
            'QmYLseWF8HSwybhhusZuJeMyXSpe9XxuJkwbQ7Z28fCjcA', 
            'QmWNwtgP4tBQByaMsiPANNTMVrNq3fSX4Bjpv8W4bbT5A1', 
            'QmUf6r85fy8afdGT6QJQPFZjtNc73qtGS5JMRdF7opqCat', 
            'QmYGi6D62PMxCjnJQqT6qg2h7S51XChiFPpDby33g2haDp', 
            'QmdDFpskwU7C1bdgNkz88YRu3Y5pWuhyNhT9x8EqsXc2J6', 
            'QmYhaHKJcL5uC7rsTNydqxY817ZmxRNi8nhA2ZoM98mfFC', 
            'QmPXudJS9xBxeLK9mxkSqywZ5TGyQLPuRWZBkxxEmBpp1U', 
            'QmW3jDvhhLkkK3beRQMoFEPNXpUgKTa2mso2kUNt288FEV', 
            'QmTPzm4YA4dQm1TwTgopMRcqBfx5WogAM8HucYhuCkNBWr', 
            'QmcmGz426iPPpja1fjmRiSXBFgy5jadiXuZLeX6fL2D8t1', 
            'QmUqWhwV94Gp8A8L4BFQAmq7jWrH9gDWHjD6bq6GpcuX52', 
            'QmV7Z9mLvhC9TaZyQ1bwSbXtkUFHz2Avzg37BBda3nMBHN', 
            'Qmaxbaxu6ejQwuMXnVt1sxTdkAqSeWuQcV22mc4K4U4st9', 
            'QmT9Rnp1toiWVJm1JwLuxG5bwfVqvDqRSFWd45Fu7cUfFo', 
            'QmQ1FAZ8xxxyLK39BDMWefU2oeTwZCjMbk9Ht5M13YBuDh', 
            'Qmerkr5UWgnEmJwjtQ2xHx5M2Ly3qPgaAPuu11wPyBt88t', 
            'QmTWqvgnCLqR3YegVoWQShUXi2QAKjeu5pZjegM61VVGC4', 
            'QmUTkMJcM2y74iPWZusg5q6GzYoX5sbFJYF3ZDK6DzAfGT', 
            'QmRCsf4eJHryUNA4EMomRmLcK6QbwRLo3QH8vNbG23yos6', 
            'QmeB1wka8PqK8DSub4w4cK2CjnjU9EWn8XpUALRmnGDYMr', 
            'QmdehNuqteKzEaL9rjEwc7CYSgwYEKVu71eb39p77kapMQ', 
            'QmT8U8orHriKFn7H5PLfV61fmU9mSgwEcoFiCiTUnP2LpT', 
            'QmQrc6vteAURag8fBkVDLxFMuEMhgrnqenjHxM55CqWCwR', 
            'QmNgs9ggEGqAcRETGhEqg8Fame9UFXSA1ciDkUv6vPuZtx', 
            'QmTxWyjrTCwG842C81pz2zHsegca7VjHjyK8uQXqvQHjg2', 
            'QmfD87HtKbE2s6drhw1b1Nyk5Mz5pKpaXi5YSEQV3zWvik', 
            'QmRcacyQZzbYHxgWoCZ1RBQUQCk3cH38zLo1knQf7Qi2EV', 
            'QmaEsFA3jwwtcsBeoVc1YUSRqD7dZsyd9PBGpssAmnEnzm', 
            'QmfArBWo4wBS5h58nu8ZCRZnEMDn1nJYLiLCgSH6dAGfWW', 
            'Qmco8BiMgQJDyxmMpuF3Ri5xT4mz6RfKS9YhHVjBFGZzVa', 
            'QmZU3GjfSjhpAgQJTZRJDnSVRKzfLCJDBZbFTrjUdp2Gf7', 
            'QmUi3BnnCwVwZ7d8PsfAAY22QZCGDFum8ZaVvVxF3WpExn', 
            'Qmf19WaxuhA8kcZZgicgC4MeMYS1bqHaXcBkiWPPgDcwF8', 
            'QmeE7g2syG6BC9J1Ud9dBWLPXGomkxuD9g5MCzPqzUncVz', 
            'QmVNa2snhAHfYJzYWZTgbvJaNK6rouu95LcERUXYukoP2y', 
            'QmZMqZkkMG14XTurDHfc7fjepggFPxFifaYYFQixXUXjjg', 
            'QmQ1wFSFowMZYr1p3kYvpUqWqqzWk1fQ4wRDuqk2fHX3uH', 
            'QmNrnhV6QS89b4csPnUVscMiiNn6qnFUJe9G41KLcS4FqD', 
            'QmS9bpE8myTzNcrqHBjFhs7hZRPU5sdchV12oagdbzph7F', 
            'QmZyGaqCKmLuesZ2Ho1yq7QZY8mYPKxQ7ocsw1kKTb9gHX', 
            'QmVmgycFxJ9HD8Ui9GqwcQvexpP8akgt7yQ2uMNr8mEw2c', 
            'QmV2mxyKkTbkoNmoDCHCyAFBUV6U7cTCQpCkVDuNpMyurB', 
            'QmTi8iv92k6HBy2hkbVaK9uZQLpExp2Sp6SZJtd6TMFL4T', 
            'QmP8ZcYb8Apro6GbzPQf29YaH8MjNjn7rvxU45TyzBrzgK', 
            'QmZ2Bf5rQqzKTuxooNtEwdHoUQ4ieWzvJyRxaqPKGL2Ssb', 
            'QmVAJF3DwwApzqDgMvYyvUkGNvaH7XTgDsVSj7bZaRD7KE', 
            'QmYrx2YC4APXEN5GqagFU8rnQqKW8YeTdRuAjtiMzB8j2J'];
        const lv1Quests3 = [
            'QmPjYLFBDp5oPepqf3ZiRs5M1wph5kB5kQ28gELisXxL3N', 
            'QmcrrVd85tb3MsVBoLtXGh3pf1j6qXLZnwsebdVj4cnsyX', 
            'QmZ2Nj9FTwdWwNcGT4ePRCQijebjnZGTW1buPeKmJRBxsJ', 
            'QmQFvfjibxf9PdgwaTJ7ebAGukiWBNGtRr17ZtGcAkVmwh', 
            'QmSMq986BpNMKRk8BSX52WXryHXc14sjYpmhwTYWQ6N7N6', 
            'QmeemrYCEnaTWNyRsrr2rUZnTyEEXBm1ygaHhrhwX81YX5', 
            'QmSjPgNmhMGtm8ScwxDCKfcoCWmAGKqgzGVpVgq37fz3b2', 
            'QmPdqFrRQVZqLwDKoY5pZK1GTPE3waZo4MhCGvnRaXDPUN', 
            'QmPG1oGzwJLFyvhhsrTs8Pz4Nw6xV7sbEtT5it8LRYNTy8', 
            'QmbSwrwBvbchAjsmS6EzdXcGtC5bUGeXtxaqZZjWQeKzrb', 
            'QmaqENzJJzCLfzzX3kYjWb9jWuDUx3vHAeRxuKSWkB9Yoq', 
            'QmapztxRfueCAt3xwqQTje2Afn9pmhfsgepA3MKC5bmheK', 
            'QmNikgm8RhkUh9EMJTjtPxN1NrbkF63tyo1YGPiMX2vqZb', 
            'QmS9BbAcpnptBKDq6oQcb3v1ZBGcycgfcsa2pB98eSpEBn', 
            'QmRaT66hDSbcYBQY1fGrV3YA1coZK5hLgT3zYwZBhJg3Ae', 
            'QmYBLb9VDa4pW6mZRuv1Befpc9ayHTRedog5Rj5ELHY9ki', 
            'QmbXaR3Pzo4rbAzX2VAR15mpNMPwAvmBtnZ1m52Rxt3zd9', 
            'QmS3h3kfXT2NgnHBve7Q1HoTAeaLrKCBZxiJCqF1kZTHAL', 
            'QmbHZCBHXtzpQ7PMang4UXQsMmBF8mb1hhACJBs3JDJagB', 
            'Qmde5P18niSdeWFjQQDdeGFN7pKkmvaVgbadKnqKQaWfP6', 
            'Qme9T8ubhq1MKw6TJvocW3N2oGeUuNjMPN2C3ZUHmsnurX', 
            'QmSTtR672Ji18yw6W6Lycj9orxV5HFnMagbrSTcfhti9GY', 
            'QmWeFmZ3MrVEXPqorcP6zHVpLTcf8D8tZtqdake77mcojN', 
            'QmNYaanG2EVYmJFqdbQoybWhqJz1GvNyMA1h5M9Ccjb2w5', 
            'QmaRnAU7zD8euSDqS59praZPWNbspofw72Eog5dAYf5ub6', 
            'QmYkmHcfCg2RBgNyPezkkqyK6e3Kh95Hh2C6r3dnWE6AXH', 
            'QmZaBrVgqhK8P8D5jQWq2gGn49xJez8uchhKRYhQHxinwA'];
        const lv1Answers1 = [
                2, 
                1, 
                2, 
                3, 
                1, 
                1, 
                1, 
                2, 
                3, 
                4, 
                1, 
                3, 
                2, 
                4, 
                2, 
                1, 
                1, 
                1, 
                1, 
                3, 
                1, 
                2, 
                2, 
                1, 
                1, 
                3, 
                2, 
                1, 
                1, 
                2, 
                2, 
                3, 
                3, 
                2, 
                2, 
                3, 
                1, 
                2, 
                2, 
                3, 
                1, 
                2, 
                1, 
                3, 
                1, 
                3, 
                1, 
                1, 
                3, 
                1];
        const lv1Answers2 = [
                4, 
                4, 
                4, 
                2, 
                1, 
                2, 
                4, 
                4, 
                2, 
                3, 
                1, 
                4, 
                4, 
                4, 
                4, 
                3, 
                1, 
                4, 
                1, 
                4, 
                4, 
                1, 
                1, 
                4, 
                4, 
                2, 
                1, 
                4, 
                2, 
                4, 
                3, 
                3, 
                1, 
                4, 
                3, 
                4, 
                1, 
                4, 
                3, 
                3, 
                1, 
                2, 
                3, 
                4, 
                4, 
                2, 
                4, 
                1, 
                1, 
                2];
        const lv1Answers3 = [
                3, 
                2, 
                2, 
                2, 
                3, 
                1, 
                2, 
                3, 
                4, 
                3, 
                4, 
                4, 
                3, 
                4, 
                2, 
                4, 
                2, 
                3, 
                1, 
                2, 
                2, 
                1, 
                3, 
                3, 
                1, 
                2, 
                4];
        await repo.batchAddQuestions(author, 1, 1, lv1Quests1, lv1Answers1);
        await repo.batchAddQuestions(author, 1, 1, lv1Quests2, lv1Answers2);
        await repo.batchAddQuestions(author, 1, 1, lv1Quests3, lv1Answers3);

        console.log('Batch add successful.')
    } catch (e) {
        console.log(e.message)
    }
})()
